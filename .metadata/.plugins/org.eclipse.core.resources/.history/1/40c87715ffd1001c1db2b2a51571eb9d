package com.fastcampus.ch2;

import java.util.Calendar;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;


//@ModelAttribute model 의 속성으로 자동추가해주는 에너테이션 반환타입 또는 컨트롤러 메서드의 매개변수에 적용!!!
//@ModelAttribute 를 사용하게되면 결과를 저장하거나 호출할 필요가 없어진다. 
//참조형 매개변수 앞에 ModelAttribute를 붙일 수 있다!!  (생략가능) 즉 앞에서 섰던 것들도 호출과 결과를 저장하지 않아도 된다!!!!

/*컨트롤러 매개변수
 * 
 * @RequestParam - 기본형
 * 
 * @ModelAttribute - 참조형
 * 
 * 
 * */ 

@Controller
public class YoilTellerMVC6 {
//    @ExceptionHandler(Exception.class)
//   public String catcher(Exception ex) {      
//      return "yoilError";
//   }
//    
//  public String main(@ModelAttribute("myDate") MyDate date, Model model) {
   @RequestMapping("/getYoilMVC6") // http://localhost/ch2/getYoilMVC6
  public String main(MyDate date, BindingResult result) {
System.out.println("result="+result);
     // 1. 유효성 검사
     if(!isValid(date)) 
          return "yoilError";  // 유효하지 않으면, /WEB-INF/views/yoilError.jsp로 이동
     
      // 2. 처리
//     char yoil = getYoil(date);

      // 3. Model에 작업 결과 저장
//      model.addAttribute("myDate", date);
//      model.addAttribute("yoil", yoil);
      
      // 4. 작업 결과를 보여줄 View의 이름을 반환
      return "yoil"; // /WEB-INF/views/yoil.jsp
  }
  
  
  private @ModelAttribute("yoil") char getYoil(MyDate date) {
          return getYoil(date.getYear(), date.getMonth(), date.getDay());
     }

     private char getYoil(int year, int month, int day) {
      Calendar cal = Calendar.getInstance();
      cal.set(year, month - 1, day);

      int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK);
      return " 일월화수목금토".charAt(dayOfWeek);
  }
  
  private boolean isValid(MyDate date) {    
     if(date.getYear()==-1 || date.getMonth()==-1 || date.getDay()==-1) 
        return false;
     
     return (1<=date.getMonth() && date.getMonth()<=12) && (1<=date.getDay() && date.getDay()<=31); // 간단히 체크 
  }
} 

 